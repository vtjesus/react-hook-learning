import{j as t}from"./emotion-use-insertion-effect-with-fallbacks.browser.esm-o1lFxRFU.js";import{B as g}from"./Backdrop-B5PLE_Ks.js";import{C as B}from"./CircularProgress-BglJUzO3.js";import{B as k}from"./Button-BPxHJIT8.js";import"./index-caxmlYbZ.js";import"./memoTheme-CtKMhVhH.js";import"./DefaultPropsProvider-C-EGLtJD.js";import"./extends-CF3RwP-h.js";import"./useSlot-D9bplHaG.js";import"./resolveComponentProps-eMZxqe1w.js";import"./useForkRef-Plrw27Ce.js";import"./useTheme-B_00P1wf.js";import"./useTheme-js8xzI_O.js";import"./utils-DqqG1i7C.js";import"./TransitionGroupContext-Cc0PzDYn.js";import"./inheritsLoose-DR8r8Ogv.js";import"./index-DIE_uK0V.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./emotion-react.browser.esm-D9YfGLo1.js";import"./ButtonBase-Dd4UDY4p.js";import"./assertThisInitialized-B9jnkVVz.js";import"./useEventCallback-D-j5pFnD.js";import"./isFocusVisible-B8k4qzLc.js";const a=({loading:o=!1,children:l,...u})=>t.jsxs(g,{...u,children:[o&&t.jsx(B,{color:"inherit"}),l]});a.__docgenInfo={description:"",methods:[],displayName:"MUIBackdrop",props:{loading:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}},composes:["MUIBackdropProps"]};const R={title:"Feedback/Backdrop",component:a,argTypes:{open:{control:"boolean"},loading:{control:"boolean"}}},m=o=>t.jsxs("div",{children:[t.jsx(k,{variant:"contained",onClick:()=>o.open=!o.open,children:"Toggle Backdrop"}),t.jsx(a,{...o})]}),r=m.bind({});r.args={open:!0,loading:!1,children:null};const e=m.bind({});e.args={open:!0,loading:!0,children:null};var n,i,p;r.parameters={...r.parameters,docs:{...(n=r.parameters)==null?void 0:n.docs,source:{originalSource:`args => <div>
    <Button variant="contained" onClick={() => args.open = !args.open}>
      Toggle Backdrop
    </Button>
    <MUIBackdrop {...args} />
  </div>`,...(p=(i=r.parameters)==null?void 0:i.docs)==null?void 0:p.source}}};var s,c,d;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`args => <div>
    <Button variant="contained" onClick={() => args.open = !args.open}>
      Toggle Backdrop
    </Button>
    <MUIBackdrop {...args} />
  </div>`,...(d=(c=e.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};const V=["Default","WithLoading"];export{r as Default,e as WithLoading,V as __namedExportsOrder,R as default};
