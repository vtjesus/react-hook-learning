import{j as r}from"./emotion-use-insertion-effect-with-fallbacks.browser.esm-o1lFxRFU.js";import{C as g}from"./CircularProgress-BglJUzO3.js";import{L as P}from"./LinearProgress-BLbQ9lwB.js";import"./index-caxmlYbZ.js";import"./memoTheme-CtKMhVhH.js";import"./DefaultPropsProvider-C-EGLtJD.js";import"./extends-CF3RwP-h.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./emotion-react.browser.esm-D9YfGLo1.js";import"./index-DPfWUdsj.js";const a=({type:o,circularProps:u,linearProps:d})=>r.jsxs(r.Fragment,{children:[o==="circular"&&r.jsx(g,{...u}),o==="linear"&&r.jsx(P,{...d})]});a.__docgenInfo={description:"",methods:[],displayName:"MUIProgress",props:{type:{required:!0,tsType:{name:"union",raw:"'circular' | 'linear'",elements:[{name:"literal",value:"'circular'"},{name:"literal",value:"'linear'"}]},description:""},circularProps:{required:!1,tsType:{name:"CircularProgressProps"},description:""},linearProps:{required:!1,tsType:{name:"LinearProgressProps"},description:""}}};const M={title:"Feedback/Progress",component:a,argTypes:{type:{control:{type:"select",options:["circular","linear"]}},circularProps:{control:"object"},linearProps:{control:"object"}}},m=o=>r.jsx(a,{...o}),e=m.bind({});e.args={type:"circular",circularProps:{color:"primary",size:40}};const s=m.bind({});s.args={type:"linear",linearProps:{color:"secondary"}};var i,t,c;e.parameters={...e.parameters,docs:{...(i=e.parameters)==null?void 0:i.docs,source:{originalSource:"args => <MUIProgress {...args} />",...(c=(t=e.parameters)==null?void 0:t.docs)==null?void 0:c.source}}};var n,p,l;s.parameters={...s.parameters,docs:{...(n=s.parameters)==null?void 0:n.docs,source:{originalSource:"args => <MUIProgress {...args} />",...(l=(p=s.parameters)==null?void 0:p.docs)==null?void 0:l.source}}};const U=["Circular","Linear"];export{e as Circular,s as Linear,U as __namedExportsOrder,M as default};
