import{f as d}from"./index-4lRnP7hS.js";import{j as r}from"./emotion-use-insertion-effect-with-fallbacks.browser.esm-o1lFxRFU.js";import{A as O}from"./Autocomplete-LlLfkmYu.js";import{T as f}from"./TextField-DlyMuZ6F.js";import"./index-DEUJ_QDu.js";import"./index-caxmlYbZ.js";import"./memoTheme-CtKMhVhH.js";import"./DefaultPropsProvider-C-EGLtJD.js";import"./extends-CF3RwP-h.js";import"./Select-Ba8eS_I8.js";import"./react-is.production.min-DUDD-a5e.js";import"./Menu-CJh8yGLa.js";import"./index-DPfWUdsj.js";import"./isHostComponent-DVu5iVWx.js";import"./useSlot-D9bplHaG.js";import"./resolveComponentProps-eMZxqe1w.js";import"./useForkRef-Plrw27Ce.js";import"./Modal-1Y4qnMwn.js";import"./ownerDocument-DW-IO8s5.js";import"./ownerWindow-HkKU3E4x.js";import"./useEventCallback-D-j5pFnD.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-B5PLE_Ks.js";import"./useTheme-B_00P1wf.js";import"./useTheme-js8xzI_O.js";import"./utils-DqqG1i7C.js";import"./TransitionGroupContext-Cc0PzDYn.js";import"./inheritsLoose-DR8r8Ogv.js";import"./index-DIE_uK0V.js";import"./Portal-t2c3skml.js";import"./Paper-6MAfx-1M.js";import"./debounce-Be36O1Ab.js";import"./Grow-Br3_uBqd.js";import"./List-DDQAG58g.js";import"./useSlotProps-D3eEuKnU.js";import"./utils-DK5FnA_s.js";import"./useControlled-BzlaMV7b.js";import"./useId-D8TmcrIr.js";import"./useFormControl-kznOudH-.js";import"./createSvgIcon-C3qKZvE9.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./index-jmn92H5i.js";import"./emotion-react.browser.esm-D9YfGLo1.js";import"./extendSxProp-B1nIj3LR.js";import"./Close-C_VeXgr_.js";import"./ButtonBase-Dd4UDY4p.js";import"./assertThisInitialized-B9jnkVVz.js";import"./isFocusVisible-B8k4qzLc.js";import"./Popper-C7DQhzDz.js";import"./usePreviousProps-D1SCO5O1.js";import"./Chip-B7ZfFLai.js";import"./FormLabel-stlYbfB0.js";import"./isMuiElement-DAw16oV4.js";function s({label:l,...c}){return r.jsx(O,{...c,style:{width:"200px"},renderInput:u=>r.jsx(f,{...u,label:l})})}s.__docgenInfo={description:"",methods:[],displayName:"MUIAutocomplete",props:{label:{required:!1,tsType:{name:"string"},description:""}},composes:["Omit"]};const ft={title:"Inputs/Autocomplete",component:s,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{},args:{onChange:d()}},t={args:{options:["Option 1","Option 2","Option 3"],label:"Select an option"}},o={args:{options:["Option 1","Option 2","Option 3"],label:"Select an option",defaultValue:"Option 2"}};var p,i,e;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    options: ['Option 1', 'Option 2', 'Option 3'],
    label: 'Select an option'
  }
}`,...(e=(i=t.parameters)==null?void 0:i.docs)==null?void 0:e.source}}};var m,n,a;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    options: ['Option 1', 'Option 2', 'Option 3'],
    label: 'Select an option',
    defaultValue: 'Option 2'
  }
}`,...(a=(n=o.parameters)==null?void 0:n.docs)==null?void 0:a.source}}};const gt=["Default","WithInitialValue"];export{t as Default,o as WithInitialValue,gt as __namedExportsOrder,ft as default};
